# agents/utility_mode/reporter_agent.py
# (V3 - The Context-Aware Chronicler)

import datetime
from typing import Optional

class ReporterAgent:
    """
    Agent ‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    (V3: ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏£‡∏π‡πâ‡∏ß‡∏±‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç)
    ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö Rule-based ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
    """
    def __init__(self):
        self.thai_months = [
            "‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°", "‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå", "‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏°", "‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô", "‡∏û‡∏§‡∏©‡∏†‡∏≤‡∏Ñ‡∏°", "‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô", 
            "‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏°", "‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏°", "‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô", "‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°", "‡∏û‡∏§‡∏®‡∏à‡∏¥‡∏Å‡∏≤‡∏¢‡∏ô", "‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏°"
        ]
        self.day_of_week_thai = [
            "‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå", "‡∏ß‡∏±‡∏ô‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£", "‡∏ß‡∏±‡∏ô‡∏û‡∏∏‡∏ò", "‡∏ß‡∏±‡∏ô‡∏û‡∏§‡∏´‡∏±‡∏™‡∏ö‡∏î‡∏µ", "‡∏ß‡∏±‡∏ô‡∏®‡∏∏‡∏Å‡∏£‡πå", "‡∏ß‡∏±‡∏ô‡πÄ‡∏™‡∏≤‡∏£‡πå", "‡∏ß‡∏±‡∏ô‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå"
        ]
        
        # <<< [UPGRADE] ‡∏û‡∏à‡∏ô‡∏≤‡∏ô‡∏∏‡∏Å‡∏£‡∏°‡πÄ‡∏Å‡πá‡∏ö‡∏ß‡∏±‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç (Key: (‡πÄ‡∏î‡∏∑‡∏≠‡∏ô, ‡∏ß‡∏±‡∏ô))
        self.IMPORTANT_DAYS = {
            (1, 1): "‡∏ß‡∏±‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏õ‡∏µ‡πÉ‡∏´‡∏°‡πà",
            (4, 6): "‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏Å‡∏£‡∏µ",
            (4, 13): "‡∏ß‡∏±‡∏ô‡∏™‡∏á‡∏Å‡∏£‡∏≤‡∏ô‡∏ï‡πå",
            (4, 14): "‡∏ß‡∏±‡∏ô‡∏™‡∏á‡∏Å‡∏£‡∏≤‡∏ô‡∏ï‡πå",
            (4, 15): "‡∏ß‡∏±‡∏ô‡∏™‡∏á‡∏Å‡∏£‡∏≤‡∏ô‡∏ï‡πå",
            (5, 4): "‡∏ß‡∏±‡∏ô‡∏â‡∏±‡∏ï‡∏£‡∏°‡∏á‡∏Ñ‡∏•",
            (6, 3): "‡∏ß‡∏±‡∏ô‡πÄ‡∏â‡∏•‡∏¥‡∏°‡∏û‡∏£‡∏∞‡∏ä‡∏ô‡∏°‡∏û‡∏£‡∏£‡∏©‡∏≤ ‡∏™‡∏°‡πÄ‡∏î‡πá‡∏à‡∏û‡∏£‡∏∞‡∏ô‡∏≤‡∏á‡πÄ‡∏à‡πâ‡∏≤‡∏™‡∏∏‡∏ó‡∏¥‡∏î‡∏≤‡∏Ø",
            (7, 28): "‡∏ß‡∏±‡∏ô‡πÄ‡∏â‡∏•‡∏¥‡∏°‡∏û‡∏£‡∏∞‡∏ä‡∏ô‡∏°‡∏û‡∏£‡∏£‡∏©‡∏≤ ‡∏û‡∏£‡∏∞‡∏ö‡∏≤‡∏ó‡∏™‡∏°‡πÄ‡∏î‡πá‡∏à‡∏û‡∏£‡∏∞‡∏ß‡∏ä‡∏¥‡∏£‡πÄ‡∏Å‡∏•‡πâ‡∏≤‡πÄ‡∏à‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏±‡∏ß",
            (8, 12): "‡∏ß‡∏±‡∏ô‡πÅ‡∏°‡πà‡πÅ‡∏´‡πà‡∏á‡∏ä‡∏≤‡∏ï‡∏¥",
            (10, 13): "‡∏ß‡∏±‡∏ô‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡∏ß‡∏±‡∏ô‡∏™‡∏ß‡∏£‡∏£‡∏Ñ‡∏ï ‡∏û‡∏£‡∏∞‡∏ö‡∏≤‡∏ó‡∏™‡∏°‡πÄ‡∏î‡πá‡∏à‡∏û‡∏£‡∏∞‡∏ö‡∏£‡∏°‡∏ä‡∏ô‡∏Å‡∏≤‡∏ò‡∏¥‡πÄ‡∏ö‡∏®‡∏£ ‡∏°‡∏´‡∏≤‡∏†‡∏π‡∏°‡∏¥‡∏û‡∏•‡∏≠‡∏î‡∏∏‡∏•‡∏¢‡πÄ‡∏î‡∏ä‡∏°‡∏´‡∏≤‡∏£‡∏≤‡∏ä ‡∏ö‡∏£‡∏°‡∏ô‡∏≤‡∏ñ‡∏ö‡∏û‡∏¥‡∏ï‡∏£ (‡∏ß‡∏±‡∏ô‡∏ô‡∏ß‡∏°‡∏¥‡∏ô‡∏ó‡∏£‡∏°‡∏´‡∏≤‡∏£‡∏≤‡∏ä)",
            (10, 23): "‡∏ß‡∏±‡∏ô‡∏õ‡∏¥‡∏¢‡∏°‡∏´‡∏≤‡∏£‡∏≤‡∏ä",
            (12, 5): "‡∏ß‡∏±‡∏ô‡∏û‡πà‡∏≠‡πÅ‡∏´‡πà‡∏á‡∏ä‡∏≤‡∏ï‡∏¥",
            (12, 10): "‡∏ß‡∏±‡∏ô‡∏£‡∏±‡∏ê‡∏ò‡∏£‡∏£‡∏°‡∏ô‡∏π‡∏ç",
            (12, 31): "‡∏ß‡∏±‡∏ô‡∏™‡∏¥‡πâ‡∏ô‡∏õ‡∏µ"
        }
        print("üìä Reporter Agent (V3 - Context-Aware) is on duty.")

    def _get_daily_context(self) -> dict:
        now = datetime.datetime.now()
        
        today_key = (now.month, now.day)
        important_day_info = self.IMPORTANT_DAYS.get(today_key)

        return {
            "full_date_str": f"‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà {now.day} {self.thai_months[now.month - 1]} ‡∏û.‡∏®. {now.year + 543}",
            "current_time": now.strftime("%H:%M"),
            "day_of_week_thai": self.day_of_week_thai[now.weekday()],
            "important_day_info": important_day_info 
        }

    def handle(self, query: str) -> Optional[str]:
        """
        ‡πÄ‡∏°‡∏ò‡∏≠‡∏î‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö query ‡πÅ‡∏•‡∏∞‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ß‡∏±‡∏ô/‡πÄ‡∏ß‡∏•‡∏≤
        """
        daily_context = self._get_daily_context()
        q_lower = query.lower().strip()

        time_keywords = ["‡∏Å‡∏µ‡πà‡πÇ‡∏°‡∏á", "‡πÄ‡∏ß‡∏•‡∏≤‡∏≠‡∏∞‡πÑ‡∏£", "‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà", "‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏µ‡πà‡πÇ‡∏°‡∏á"]
        if any(keyword in q_lower for keyword in time_keywords):
            return f"‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏ß‡∏•‡∏≤ {daily_context['current_time']} ‡∏ô. ‡∏Ñ‡∏£‡∏±‡∏ö"

        date_keywords = ["‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏ß‡∏±‡∏ô‡∏≠‡∏∞‡πÑ‡∏£", "‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà", "‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà"]
        if any(keyword in q_lower for keyword in date_keywords):
            day_of_week = daily_context['day_of_week_thai']
            full_date_str = daily_context['full_date_str']
            important_day = daily_context.get('important_day_info')

            if important_day:
                return f"‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠{day_of_week} ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö{full_date_str} ‡πÅ‡∏•‡∏∞‡∏¢‡∏±‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ô{important_day}‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏≠‡∏µ‡∏Å‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö"
            else:
                return f"‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠{day_of_week} ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö{full_date_str}‡∏Ñ‡∏£‡∏±‡∏ö"
        
        return None